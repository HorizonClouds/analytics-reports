openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: Combined API documentation for Analytics and Report services
servers:
  - url: /api/v1
    description: Main API Server

paths:
  # Rutas del servicio de Report
  /reports/{id}:
    get:
      summary: Get a report by ID
      tags:
        - Reports
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the report to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A report successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: '60c72b2f9b1d8f0d8d0b6f9e'
                  type:
                    type: string
                    example: 'itinerary'
                  reason:
                    type: string
                    example: 'Inappropriate content'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-10-01T12:00:00Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-10-01T12:00:00Z'
                  details:
                    type: object
                    properties:
                      additionalInfo:
                        type: string
                        example: 'Some details'
        '404':
          description: Report not found

  /reports/user/{userId}:
    get:
      summary: Get reports by user ID
      tags:
        - Reports
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user whose reports to fetch
          schema:
            type: string
      responses:
        '200':
          description: A list of reports for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: '60c72b2f9b1d8f0d8d0b6f9e'
                    type:
                      type: string
                      example: 'publication'
                    reason:
                      type: string
                      example: 'Inappropriate content'
                    createdAt:
                      type: string
                      format: date-time
                      example: '2023-10-01T12:00:00Z'
                    updatedAt:
                      type: string
                      format: date-time
                      example: '2023-10-01T12:00:00Z'
                    details:
                      type: object
                      properties:
                        additionalInfo:
                          type: string
                          example: 'Some details'
        '404':
          description: No reports found for the user

  /reports:
    post:
      summary: Create a new report
      tags:
        - Reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: '60c72b2f9b1d8f0d8d0b6f9e'
                type:
                  type: string
                  enum: ['publication', 'itinerary']
                  example: 'itinerary'
                reason:
                  type: string
                  example: 'Spam'
                details:
                  type: object
                  properties:
                    additionalInfo:
                      type: string
                      example: 'Some details'
      responses:
        '201':
          description: The created report
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: '60c72b2f9b1d8f0d8d0b6f9e'
                  type:
                    type: string
                    example: 'itinerary'
                  reason:
                    type: string
                    example: 'Spam'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2023-10-01T12:00:00Z'
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2023-10-01T12:00:00Z'
                  details:
                    type: object
                    properties:
                      additionalInfo:
                        type: string
                        example: 'Some details'

  # Rutas del servicio de Analytics
  /analytics:
    get:
      summary: Get all analytics
      tags:
        - Analytics
      responses:
        '200':
          description: A list of analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Analytics fetched successfully
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserAnalytic'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
    post:
      summary: Create a new analytic
      tags:
        - Analytics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAnalytic'
      responses:
        '201':
          description: The created analytic
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Analytic created successfully
                  data:
                    $ref: '#/components/schemas/UserAnalytic'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'

  /analytics/{id}:
    get:
      summary: Get an analytic by ID
      tags:
        - Analytics
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the analytic to fetch
          schema:
            type: string
      responses:
        '200':
          description: The requested analytic
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Analytic fetched successfully
                  data:
                    $ref: '#/components/schemas/UserAnalytic'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '404':
          description: Analytic not found

  /analytics/user/{userId}:
    get:
      summary: Get analytics by user ID
      tags:
        - Analytics
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user whose analytics to fetch
          schema:
            type: string
      responses:
        '200':
          description: Analytics for the specified user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Analytics fetched successfully
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserAnalytic'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '404':
          description: No analytics found for the user

components:
  schemas:
    UserAnalytic:
      type: object
      properties:
        _id:
          type: string
          example: '60c72b2f9b1d8f0d8d0b6f9e'
        userId:
          type: string
          example: 'user123'
        userItineraryAnalytic:
          type: object
          properties:
            totalCommentsCount:
              type: integer
              example: 10
            avgComments:
              type: number
              example: 2.5
            totalReviewsCount:
              type: integer
              example: 5
            averageReviewScore:
              type: number
              example: 4.5
            bestItineraryByAvgReviewScore:
              type: string
              example: '60c72b2f9b1d8f0d8d0b6f9e'
        userPublicationAnalytic:
          type: object
          properties:
            totalCommentsCount:
              type: integer
              example: 15
            averageLike:
              type: number
              example: 4.5
            totalLikesCount:
              type: integer
              example: 100
            commentsPerPublication:
              type: number
              example: 5
        data:
          type: object
          properties:
            someField:
              type: string
              example: 'someValue'
        analysisDate:
          type: string
          format: date-time
          example: '2023-12-01T12:00:00.000Z'
    NewAnalytic:
      type: object
      properties:
        userId:
          type: string
          example: 'user123'
        userItineraryAnalytic:
          type: object
          properties:
            totalCommentsCount:
              type: integer
              example: 10
            avgComments:
              type: number
              example: 2.5
            totalReviewsCount:
              type: integer
              example: 5
            averageReviewScore:
              type: number
              example: 4.5
            bestItineraryByAvgReviewScore:
              type: string
              example: '60c72b2f9b1d8f0d8d0b6f9e'
        userPublicationAnalytic:
          type: object
          properties:
            totalCommentsCount:
              type: integer
              example: 15
            averageLike:
              type: number
              example: 4.5
            totalLikesCount:
              type: integer
              example: 100
            commentsPerPublication:
              type: number
              example: 5
        data:
          type: object
          properties:
            someField:
              type: string
              example: 'someValue'
